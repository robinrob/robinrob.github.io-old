{
  "name": "gulp-sitemap",
  "version": "2.1.1",
  "description": "Generate a search engine friendly sitemap.xml using a Gulp stream",
  "repository": {
    "type": "git",
    "url": "git://github.com/pgilad/gulp-sitemap"
  },
  "license": "MIT",
  "author": {
    "name": "Gilad Peleg",
    "email": "giladp007@gmail.com",
    "url": "http://giladpeleg.com"
  },
  "main": "index.js",
  "files": [
    "index.js",
    "lib"
  ],
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "watchTest": "mocha -R spec --watch test/*.spec.js",
    "test": "mocha -R spec test/*.spec.js"
  },
  "keywords": [
    "gulpplugin",
    "gulp",
    "js",
    "javascript",
    "SEO",
    "sitemap",
    "sitemap.xml",
    "Google",
    "search-engine",
    "xml"
  ],
  "dependencies": {
    "chalk": "^1.0.0",
    "gulp-util": "^3.0.4",
    "lodash.defaults": "^3.1.1",
    "lodash.includes": "^3.1.2",
    "multimatch": "^2.0.0",
    "slash": "^1.0.0",
    "through2": "^0.6.5"
  },
  "devDependencies": {
    "gulp": "^3.8.11",
    "mocha": "^2.2.4",
    "should": "^6.0.1"
  },
  "readme": "# [gulp](https://github.com/wearefractal/gulp)-sitemap\n> Generate a search engine friendly sitemap.xml using a Gulp stream\n\n[![NPM version](http://img.shields.io/npm/v/gulp-sitemap.svg?style=flat)](https://www.npmjs.org/package/gulp-sitemap)\n[![NPM Downloads](http://img.shields.io/npm/dm/gulp-sitemap.svg?style=flat)](https://www.npmjs.org/package/gulp-sitemap)\n[![Build Status](http://img.shields.io/travis/pgilad/gulp-sitemap/master.svg?style=flat)](https://travis-ci.org/pgilad/gulp-sitemap)\n\nEasily generate a search engine friendly sitemap.xml from your project.\n\n:bowtie: Search engines love the sitemap.xml and it helps SEO as well.\n\nFor information about sitemap properties and structure, see the [wiki for sitemaps](http://www.wikiwand.com/en/Sitemaps)\n\n## Install\n\nInstall with [npm](https://npmjs.org/package/gulp-sitemap)\n\n```bash\n$ npm install --save-dev gulp-sitemap\n```\n\n## Example\n\n```js\nvar gulp = require('gulp');\nvar sitemap = require('gulp-sitemap');\n\ngulp.task('sitemap', function () {\n    gulp.src('build/**/*.html')\n        .pipe(sitemap({\n            siteUrl: 'http://www.amazon.com'\n        }))\n        .pipe(gulp.dest('./build'));\n});\n```\n\n* `siteUrl` is required.\n* `index.html` will be turned into directory path `/`.\n* `404.html` will be skipped automatically. No need to unglob it.\n\nLet's see an example of how we can create and output a sitemap, and then return to the original stream files:\n```js\nvar gulp = require('gulp');\nvar sitemap = require('gulp-sitemap');\nvar save = require('gulp-save');\n\ngulp.task('html', function() {\n    gulp.src('*.html')\n        .pipe(save('before-sitemap'))\n        .pipe(sitemap({\n                siteUrl: 'http://www.amazon.com'\n        })) // Returns sitemap.xml\n        .pipe(gulp.dest('./dist'))\n        .pipe(save.restore('before-sitemap')) //restore all files to the state when we cached them\n        // -> continue stream with original html files\n        // ...\n});\n```\n\n## Options\n\n### siteUrl\n\nYour website's base url. This gets prepended to all documents locations.\n\nType: `string`\n\nRequired: `true`\n\n### fileName\n\nDetermine the output filename for the sitemap.\n\nType: `string`\n\nDefault: `sitemap.xml`\n\nRequired: `false`\n\n### changefreq\n\nGets filled inside the sitemap in the tag `<changefreq>`. Not added by default.\n\nType: `string`\n\nDefault: `null`\n\nValid Values: `['always', 'hourly', 'daily', 'weekly', 'monthly', 'yearly', 'never']`\n\nRequired: `false`\n\n**Note: any falsey value is also valid and will skip this xml tag**\n\n### priority\n\nGets filled inside the sitemap in the tag `<priority>`. Not added by default.\n\nType: `string`\n\nDefault: `null`\n\nValid Values: `0.0` to `1.0`\n\nRequired: `false`\n\n**Note: any falsey (non-zero) value is also valid and will skip this xml tag**\n\n### lastmod\n\nThe file last modified time.\n\n If `null` then this plugin will try to get the last modified time from the stream vinyl file, or use `Date.now()` as lastmod.\n\nIf the value is not `null` - It will be used as lastmod. That gives the user the ability to manually set the `lastmod`.\n\nType: `string|Datetime`\n\nDefault: `null`\n\nRequired: `false`\n\n**Note: any falsey (other than null) value is also valid and will skip this xml tag**\n\n### newLine\n\nHow to join line in the target sitemap file.\n\nType: `string`\n\nDefault: Your OS's new line, mostly: `\\n`\n\nRequired: `false`\n\n### spacing\n\nHow should the sitemap xml file be spaced. You can use `\\t` for tabs, or `  ` with 2\nspaces if you'd like.\n\nType: `string`\n\nDefault: `    ` (4 spaces)\n\nRequired: `false`\n\n### mappings\n\nAn object to custom map pages to their own configuration.\n\nThis should be an array with the following structure:\n\nType: `array`\n\nDefault: `[]`\n\nRequired: `false`\n\nExample:\n\n```js\nmappings: [{\n    pages: [ 'minimatch pattern' ],\n    changefreq: 'hourly',\n    priority: 0.5,\n    lastmod: Date.now()\n},\n//....\n]\n```\n\n- Every file will be matched against the supplied patterns\n- Only defined attributes for a matched file are applied.\n- Only the first match will apply, so consequent matches for the filename will not apply.\n- Possible attributes to override: `changefreq`,  `priority` and `lastmod`.\n- All rules applying to [options](#options) apply to the attributes that can overridden.\n\n#### pages\n\nType: `array`\n\nRequired: `true`\n\nThis is an array with [minimatch](https://github.com/isaacs/minimatch) patterns to match the\nrelevant pages to override.\nEvery file will be matched against the supplied patterns.\n\nUses [multimatch](https://github.com/sindresorhus/multimatch) to match patterns against filenames.\n\nExample: `pages: ['home/index.html', 'home/see-*.html', '!home/see-admin.html']`\n\n#### verbose\n\nType: `boolean`\n\nRequired: `false`\n\nDefault: `false`\n\nIf true, will log the number of files that where handled.\n\n## Complementary plugins\n\n- [gulp-sitemap-files](https://github.com/adam-lynch/gulp-sitemap-files) - Get all files listed in a sitemap (Perhaps one generated from this plugin)\n\n## Thanks\n\nTo [grunt-sitemap](https://github.com/RayViljoen/grunt-sitemap) for the inspiration on writing this.\n\n## License\n\nMIT Â©[Gilad Peleg](http://giladpeleg.com)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/pgilad/gulp-sitemap/issues"
  },
  "_id": "gulp-sitemap@2.1.1",
  "dist": {
    "shasum": "2c9fd441609d585aa506d1fae6ee226277823f73"
  },
  "_from": "gulp-sitemap@",
  "_resolved": "https://registry.npmjs.org/gulp-sitemap/-/gulp-sitemap-2.1.1.tgz"
}
